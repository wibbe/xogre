
PROJECT(XOGRE)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6.4)

SET(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake;${CMAKE_MODULE_PATH}")
#SET(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/${OGRE_PATH}/CMake;${CMAKE_MODULE_PATH}")

IF("${OGRE_PATH}" STREQUAL "")
  MESSAGE(FATAL_ERROR "Missing Ogre 3D path, set the OGRE_PATH variable.")
ENDIF()

SET(OGRE_HOME ${OGRE_PATH})
FIND_PACKAGE(OGRE REQUIRED)

SET(DEPENDENCY_LIBS ${OGRE_LIBRARIES})
INCLUDE_DIRECTORIES("${OGRE_INCLUDE_DIR}")

# Use Boost if we specify a path for it
IF(NOT "${BOOST_PATH}" STREQUAL "")
  SET(BOOST_ROOT ${BOOST_PATH})

  FIND_PACKAGE(Boost 1.50.0 COMPONENTS thread date_time REQUIRED)
  SET(DEPENDENCY_LIBS ${DEPENDENCY_LIBS} ${Boost_LIBRARIES})
  INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
ENDIF()

# Use ZZip if we specify a path for it
IF (NOT ${ZZIP_PATH} STREQUAL "")
  SET(ZZIP_HOME ${ZZIP_PATH})
  FIND_PACKAGE(ZZip REQUIRED)
  SET(DEPENDENCY_LIBS ${DEPENDENCY_LIBS} ${ZZip_LIBRARIES})
ENDIF()

# Use FreeImage if we specify a path for it
IF (NOT ${FREE_IMAGE_PATH} STREQUAL "")
  SET(FREEIMAGE_HOME ${FREE_IMAGE_PATH})
  FIND_PACKAGE(FreeImage REQUIRED)
  SET(DEPENDENCY_LIBS ${DEPENDENCY_LIBS} ${FreeImage_LIBRARIES})
ENDIF()

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)

IF(UNIX)
  IF(APPLE)
    SET(CMAKE_OSX_ARCHITECTURES x86_64)
    ADD_DEFINITIONS("-DPLATFORM_MAC")
  ELSE()
    ADD_DEFINITIONS("-DPLATFORM_LINUX")
  ENDIF()
ENDIF(UNIX)

INCLUDE_DIRECTORIES(
  "${OGRE_INCLUDE_DIR}"
  "${CMAKE_CURRENT_SOURCE_DIR}/src"
  "${CMAKE_CURRENT_SOURCE_DIR}/include"
)

LINK_DIRECTORIES(

)

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(tests)

